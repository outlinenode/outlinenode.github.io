<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://outlinenode.github.io/news/article-83384.htm" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>设计模式学习笔记（十三）组合模式及其在树形结构中的应用</title>
        <meta name="description" content="组合（Composite）模式，又叫做树形模式，主要用来处理树形结构数据。是将一组对象组织成树形结构，以表示一种“部分-整体”的层次结构。让客户端可以统一单个对象和组合对象的处理逻辑。  一、组合模式" />
        <link rel="icon" href="/assets/website/img/outlinenode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Outline Node免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://outlinenode.github.io/news/article-83384.htm" />
    <meta property="og:site_name" content="Outline Node免费机场订阅节点官网" />
    <meta property="og:title" content="设计模式学习笔记（十三）组合模式及其在树形结构中的应用" />
    <meta property="og:image" content="https://outlinenode.github.io/uploads/20241101/a0c9c5735c3655e14dce69caff7fafde.webp" />
        <meta property="og:release_date" content="2025-03-28T09:56:03" />
    <meta property="og:updated_time" content="2025-03-28T09:56:03" />
        <meta property="og:description" content="组合（Composite）模式，又叫做树形模式，主要用来处理树形结构数据。是将一组对象组织成树形结构，以表示一种“部分-整体”的层次结构。让客户端可以统一单个对象和组合对象的处理逻辑。  一、组合模式" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="设计模式学习笔记（十三）组合模式及其在树形结构中的应用">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Favicon -->
    <link rel="stylesheet" href="/assets/website/css/outlinenode/vendor/icofont.min.css" />
    <link rel="stylesheet" href="/assets/website/css/outlinenode/plugins/animate.min.css" />
    <link rel="stylesheet" href="/assets/website/css/outlinenode/plugins/swiper-bundle.min.css" />
    <link rel="stylesheet" href="/assets/website/css/outlinenode/plugins/aos.css" />
    <link rel="stylesheet" href="/assets/website/css/outlinenode/plugins/selectric.css" />
    <link rel="stylesheet" href="/assets/website/css/outlinenode/style.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-S2WVKF223J"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-S2WVKF223J');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <header class="header">
        <div id="active-sticky" class="header-bottom">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col">
                        <a href="/" class="brand-logo">
                                                        <span>Outline Node</span>
                                                    </a>
                    </div>
                    <div class="col-auto"><a class="btn btn-warning btn-hover-warning d-none d-sm-inline-block d-lg-none" href="#">Analyze Your Site <i class="icofont-arrow-right"></i></a>
                        <button type="button" class="btn btn-warning offcanvas-toggler" data-bs-toggle="modal" data-bs-target="#offcanvas-modal"><span class="line"></span><span class="line"></span><span class="line"></span></button>
                        <nav class="d-none d-lg-block">
                            <ul class="main-menu text-end">
                                                                <li class="main-menu-item"><a class="main-menu-link" href="/">首页</a></li>
                                                                <li class="main-menu-item"><a class="main-menu-link" href="/free-nodes/">免费节点</a></li>
                                                                <li class="main-menu-item"><a class="main-menu-link" href="/paid-subscribe/">推荐机场</a></li>
                                                                <li class="main-menu-item"><a class="main-menu-link" href="/client.htm">客户端</a></li>
                                                                <li class="main-menu-item"><a class="main-menu-link" href="/news/">新闻资讯</a></li>
                                                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!-- bread crumb section start -->
    <section class="bread-crumb-section"><img class="shape shape1" src="/assets/website/img/outlinenode/bread/1.png" alt="images_not_found"><img class="shape shape2" src="/assets/website/img/outlinenode/bread/2.png" alt="images_not_found">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <h1 class="title text-center">设计模式学习笔记（十三）组合模式及其在树形结构中的应用</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb justify-content-center">
                            <li class="breadcrumb-item"><a href="/">首页</a></li>
                            <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                            <li class="breadcrumb-item active" aria-current="page"><span>正文</span></li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </section>
    <!-- bread crumb section end -->
    <!-- faq section start -->
    <section class="faq-section my-7"> <img src="/assets/website/img/outlinenode/faq/bg.png" alt="images-not_found" class="faq-bg" />
        <div class="container mb-7">
            <div class="row mb-n7">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<p>组合（Composite）模式，又叫做树形模式，主要用来处理树形结构数据。是将一组对象组织成树形结构，以表示一种“部分-整体”的层次结构。让客户端可以统一单个对象和组合对象的处理逻辑。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b9ea23635622a47e04c77ada11664e47.jpg" alt="设计模式学习笔记（十三）组合模式及其在树形结构中的应用"></p> <h2 id="一组合模式介绍">一、组合模式介绍</h2> <p>组合模式通过以树形结构来表示“部分-整体”，使得用户对叶对象和组合对象的使用具有一致性。也就是说在组合模式中，整个树形结构的对象都属于同一种类型，用户可以对叶对象和组合对象统一处理。</p> <h3 id="11-组合模式分类">1.1 组合模式分类</h3> <p>组合模式主要有透明式和安全式两种分类，下面来分别说明</p> <h4 id="111-透明式组合模式">1.1.1 透明式组合模式</h4> <p>在该方式中，抽象构件声明了所有子类中的全部方法，这样实现抽象构件接口的所有子类都具备了全部方法，这样的好处是叶节点和枝节点对于外界没有任何区别，它们具备了完全一致的接口。但是对于叶节点有些本身不具备的方法，就可能会有安全隐患（空指针异常等）。其结构类图如下所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/36eb1e1a737c38d428af17278929841c.jpg" alt="设计模式学习笔记（十三）组合模式及其在树形结构中的应用"></p> <ul> <li><code>Component</code>：抽象构件，为叶节点和树枝节点声明公共接口，以及访问和管理子类的接口</li> <li><code>Composite</code>：树枝构件，组合中的分支节点对象，作用是存储和管理子部件</li> <li><code>Leaf</code>：树叶构件，组合中的叶节点对象，用于继承和实现抽象构件</li> <li><code>Client</code>：客户端</li> </ul> <h4 id="112-安全式组合模式">1.1.2 安全式组合模式</h4> <p>前面提到透明式组合模式中，因为抽象构件声明所有子类方法，有可能会造成安全问题。所以在安全式中，将管理叶节点的方法转移到树枝构件中，抽象构件和树叶构件没有对子对象的管理方法，这样就避免了透明式组合模式中的安全问题。但是由于树叶和树枝构件有不同的接口，因此在使用时，就不能将两种构件一概而论，对于客户端调用方而言，就失去了透明性。其结构类图如下所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/8d531fdd757268a9e70925616f3756fc.jpg" alt="设计模式学习笔记（十三）组合模式及其在树形结构中的应用"></p> <ul> <li><code>Component</code>：抽象构件，为叶节点和树枝节点声明公共接口，没有访问和管理子类的接口</li> <li><code>Composite</code>：树枝构件，组合中的分支节点对象，作用是存储和管理子部件</li> <li><code>Leaf</code>：树叶构件，组合中的叶节点对象，没有对子类的管理方法</li> <li><code>Client</code>：客户端</li> </ul> <h3 id="12-组合模式实现">1.2 组合模式实现</h3> <p>根据上面的类图，可以实现如下代码：</p> <h4 id="121-透明式组合模式实现">1.2.1 透明式组合模式实现</h4> <pre><code class="language-java">/**  * @description: 透明式抽象构件  * @author: wjw  * @date: 2022/4/3  */ public interface Component {      /**公共操作方法**/    void operation();      /**      * 添加构件      * @param c 组合模式中的构件      */     void add(Component c);      /**      * 移除构件      * @param c 组合模式中的构件      */     void remove(Component c);      /**      * 获得子对象      * @param t 子对象序号      * @return  子对象      */     Component getChild(int t);  }  /**  * @description: 树枝节点  * @author: wjw  * @date: 2022/4/3  */ public class Composite implements Component{      private ArrayList&lt;Component&gt; children = new ArrayList&lt;&gt;();      @Override     public void operation() {         for (Component child : children) {             child.operation();         }     }      @Override     public void add(Component c) {         children.add(c);     }      @Override     public void remove(Component c) {         children.remove(c);     }      @Override     public Component getChild(int t) {         return children.get(t);     } }  /**  * @description: 树叶节点  * @author: wjw  * @date: 2022/4/3  */ public class Leaf implements Component{     private String name;      public Leaf(String name) {         this.name = name;     }      @Override     public void operation() {         System.out.println("我是树叶节点:" + name);     }      @Override     public void add(Component c) {      }      @Override     public void remove(Component c) {      }      @Override     public Component getChild(int t) {         return null;     } } /**  * @description: 客户端类  * @author: wjw  * @date: 2022/4/3  */ public class Client {     public static void main(String[] args) {         Component component = new Composite();         Component leaf1 = new Leaf("1");         Component leaf2 = new Leaf("2");         component.add(leaf1);         component.add(leaf2);         component.operation();         component.getChild(1).operation();         //这里树叶构件能调用add方法就会造成安全隐患         leaf1.add(leaf1);     } }</code></pre> <p>客户端运行结果：</p> <pre><code>我是树叶节点:1 我是树叶节点:2 我是树叶节点:2</code></pre> <h4 id="122-安全式组合模式实现">1.2.2 安全式组合模式实现</h4> <pre><code class="language-java">/**  * @description: 安全式抽象构件  * @author: wjw  * @date: 2022/4/3  */ public interface Component {      /**公共操作方法**/    void operation(); }  /**  * @description: 树枝节点  * @author: wjw  * @date: 2022/4/3  */ public class Composite implements Component{      private ArrayList&lt;Component&gt; children = new ArrayList&lt;&gt;();      @Override     public void operation() {         for (Component child : children) {             child.operation();         }     }       public void add(Component c) {         children.add(c);     }       public void remove(Component c) {         children.remove(c);     }       public Component getChild(int t) {         return children.get(t);     } }  /**  * @description: 树叶节点  * @author: wjw  * @date: 2022/4/3  */ public class Leaf implements Component{     private String name;      public Leaf(String name) {         this.name = name;     }      @Override     public void operation() {         System.out.println("我是树叶节点:" + name);     }  }  /**  * @description: 客户端类  * @author: wjw  * @date: 2022/4/3  */ public class Client {     public static void main(String[] args) {         Composite composite = new Composite();         Leaf leaf1 = new Leaf("1");         Leaf leaf2 = new Leaf("2");         composite.add(leaf1);         composite.add(leaf2);         composite.operation();     } }</code></pre> <p>客户端测试结果：</p> <pre><code>我是树叶节点:1 我是树叶节点:2</code></pre> <h2 id="二组合模式应用场景">二、组合模式应用场景</h2> <p>组合模式常见的应用场景主要是出现树形结构的地方，比如文件目录，公司人员架构图等等</p> <h3 id="21-公司人员架构">2.1 公司人员架构</h3> <p>比如按照部门和员工组织成树形结构，可以统一处理薪资：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/88eb4c6b528e1e1747186cc6559c4f98.jpg" alt="设计模式学习笔记（十三）组合模式及其在树形结构中的应用"></p> <pre><code class="language-java">/**  * @description: 人力资源抽象构件  * @author: wjw  * @date: 2022/4/3  */ public abstract class HumanResource {     protected long id;     protected double salary;      public HumanResource(long id) {         this.id = id;     }      public long getId() {         return id;     }      /**      * 计算工资      * @return 工资结果      */     public abstract double calculateSalary(); }  /**  * @description: 部门树枝构件  * @author: wjw  * @date: 2022/4/3  */ public class Department extends HumanResource{      private List&lt;HumanResource&gt; humanResources = new ArrayList&lt;&gt;();      public Department(long id) {         super(id);     }      @Override     public double calculateSalary() {         double totalSalary = 0;         for (HumanResource humanResource : humanResources) {             totalSalary += humanResource.calculateSalary();         }         this.salary = totalSalary;         return totalSalary;     }      public void addHumanResource(HumanResource humanResource) {         humanResources.add(humanResource);     } } /**  * @description: 员工树叶构件  * @author: wjw  * @date: 2022/4/3  */ public class Employee extends HumanResource{      public Employee(long id, double salary) {         super(id);         this.salary = salary;     }      @Override     public double calculateSalary() {         return salary;     } }</code></pre> <h2 id="参考资料">参考资料</h2> <p>《设计模式之美》</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://c.biancheng.net/view/1373.html"  target="_blank" rel="nofollow">http://c.biancheng.net/view/1373.html</a></p> <p>《Java 设计模式》</p> <p>《设计模式：可复用面向对象软件的基础》</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-82675.htm">给动物接种疫苗的目的有哪些方面（给动物打疫苗的官方部门）</a></p>
                                        <p>下一个：<a href="/news/article-83385.htm">58同城狗狗免费领养成都（58同城宠物领养成都）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-77147.htm" title="动物疫苗在哪里买便宜 动物疫苗在哪里买便宜点">动物疫苗在哪里买便宜 动物疫苗在哪里买便宜点</a></li>
                        <li class="py-2"><a href="/news/article-77836.htm" title="spring boot Actuator之自定义Endpoint">spring boot Actuator之自定义Endpoint</a></li>
                        <li class="py-2"><a href="/news/article-66599.htm" title="狗狗的领养协议（狗狗领养协议书范本）">狗狗的领养协议（狗狗领养协议书范本）</a></li>
                        <li class="py-2"><a href="/news/article-52177.htm" title="动物疫苗查询系统官网查询（动物疫苗批签发查询）">动物疫苗查询系统官网查询（动物疫苗批签发查询）</a></li>
                        <li class="py-2"><a href="/news/article-62310.htm" title="动物疫苗要打几针才有效呢 动物疫苗要打几针才有效呢视频">动物疫苗要打几针才有效呢 动物疫苗要打几针才有效呢视频</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-27-free-node-subscribe-links.htm" title="3月27日→21.1M/S|2025年最新免费节点Outline Node订阅链接地址">3月27日→21.1M/S|2025年最新免费节点Outline Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-49563.htm" title="JavaCV的摄像头实战之七：推流(带声音)">JavaCV的摄像头实战之七：推流(带声音)</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-25-node-share-links.htm" title="1月25日→18.7M/S|2025年最新免费节点Outline Node订阅链接地址">1月25日→18.7M/S|2025年最新免费节点Outline Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-39660.htm" title="前端:一篇彻底搞懂vuex (mapState、mapGetters、mapMutations、mapActions)">前端:一篇彻底搞懂vuex (mapState、mapGetters、mapMutations、mapActions)</a></li>
                        <li class="py-2"><a href="/news/article-55457.htm" title="北京看宠物最好的医院是哪家（北京看宠物最好的医院是哪家好）">北京看宠物最好的医院是哪家（北京看宠物最好的医院是哪家好）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- faq team section end -->
    <!-- blog section end -->
        <footer class="footer-section position-relative">
        <!-- coppy right satrt -->
        <div class="copy-right-section">
            <div class="container">
                <div class="row">
                    <div class="col-12">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p>
                            <a href="/">Outline Node免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <!-- coppy right end -->
    </footer>
    <!-- Scripts -->
    <script src="/assets/website/js/frontend/outlinenode/vendor/vendor.min.js"></script>
    <script src="/assets/website/js/frontend/outlinenode/plugins/plugins.min.js"></script>
    <script src="/assets/website/js/frontend/outlinenode/ajax-contact.js"></script>
    <script src="/assets/website/js/frontend/outlinenode/plugins/aos.js"></script>
    <script src="/assets/website/js/frontend/outlinenode/plugins/waypoints.js"></script>
    <script src="/assets/website/js/frontend/outlinenode/plugins/jquery.selectric.min.js"></script>
    <script src="/assets/website/js/frontend/outlinenode/main.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>